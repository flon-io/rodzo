
mne_tos() L=21 I=2
  cows are flying L=23 I=3
    used to crash when the 1st it had no ensure L=25 I=4
    turns longs to mnemonic (hopefully) strings (FAILED) L=37 I=5
    flips "burgers" L=46 I=6
    string equals L=49 I=7
      compares strings 1 L=53 I=8
      compares strings 2 (FAILED) L=57 I=9
      compares strings 2 L=63 I=10
      expects strings to differ 1 L=67 I=11
      expects strings to differ 2 (FAILED) L=71 I=12
      frees strings 1 L=75 I=13
      doesn't crash when strings are NULL (FAILED) L=79 I=14
      compares to NULL (FAILED) L=83 I=15
      compares empty strings L=88 I=16
      matches strings 1 L=102 I=17
      matches strings 2 (fail) (FAILED) L=106 I=18
      matches strings (insensitive) L=110 I=19
      starts with (success) L=115 I=20
      starts with (failure) (FAILED) L=119 I=21
      starts and ends quickly if the result is NULL (FAILED) L=123 I=22
      starts with (insensitive) L=127 I=23
      ends with (success) L=132 I=24
      ends with (failure) (FAILED) L=136 I=25
      ends quickly if the result is NULL (FAILED) L=140 I=26
      ends with (insensitive) L=144 I=27
      accepts ===i for case insensitive comparison L=149 I=28
    typed equals L=153 I=29
      succeeds L=157 I=30
      fails (FAILED) L=161 I=31
      fails 'f' (FAILED) L=165 I=32
      fails 'zd' (FAILED) L=169 I=33
    accepts empty specs L=173 I=34
mne_tos() L=185 I=37
  birds are flying L=186 I=38
    finds the コンビニ convenient L=190 I=39
    is OK with "double quotes" and 	abs (FAILED) L=194 I=40
    does not care about 
 (FAILED) L=198 I=41
mne_toi() L=208 I=43
  flips burgers L=212 I=44

Failures:

  1) mne_tos() cows are flying turns longs to mnemonic (hopefully) strings 
     >      ensure(strcmp(mne_tos(7), "FAIL") == 0);<
     # ../spec/mnemo_0_spec.c:37 L=37 I=5
  2) mne_tos() cows are flying string equals compares strings 2 
     expected "ku"
     to equal "FAIL"
     >        ensure(mne_tos(7) === "FAIL");<
     # ../spec/mnemo_0_spec.c:57 L=57 I=9
  3) mne_tos() cows are flying string equals expects strings to differ 2 
     didn't expect "ia"
     >        ensure(mne_tos(47) !== "ia");<
     # ../spec/mnemo_0_spec.c:71 L=71 I=12
  4) mne_tos() cows are flying string equals doesn't crash when strings are NULL 
     result is NULL
     >        ensure(NULL === "ia");<
     # ../spec/mnemo_0_spec.c:79 L=79 I=14
  5) mne_tos() cows are flying string equals compares to NULL 
     expected "ia"
        to be NULL
     >        ensure("ia" === NULL);<
     # ../spec/mnemo_0_spec.c:83 L=83 I=15
  6) mne_tos() cows are flying string equals matches strings 2 (fail) 
     expected "ia"
     to match "[xy]a"
     >        ensure(mne_tos(47) ~== "[xy]a");<
     # ../spec/mnemo_0_spec.c:106 L=106 I=18
  7) mne_tos() cows are flying string equals starts with (failure) 
          expected "this is true"
     to start with "that "
     >        ensure("this is true" ^== "that ");<
     # ../spec/mnemo_0_spec.c:119 L=119 I=21
  8) mne_tos() cows are flying string equals starts and ends quickly if the result is NULL 
          expected (null)
     to start with "that "
     >        ensure(NULL ^== "that ");<
     # ../spec/mnemo_0_spec.c:123 L=123 I=22
  9) mne_tos() cows are flying string equals ends with (failure) 
        expected "this is true"
     to end with " false"
     >        ensure("this is true" $== " false");<
     # ../spec/mnemo_0_spec.c:136 L=136 I=25
  10) mne_tos() cows are flying string equals ends quickly if the result is NULL 
        expected (null)
     to end with " false"
     >        ensure(NULL $== " false");<
     # ../spec/mnemo_0_spec.c:140 L=140 I=26
  11) mne_tos() cows are flying typed equals fails 
     expected 1
        to == 2
     >        expect(1 i== 2);<
     # ../spec/mnemo_0_spec.c:161 L=161 I=31
  12) mne_tos() cows are flying typed equals fails 'f' 
     expected 1.000000
        to == 2.000000
     >        expect(1.0 f== 2.0);<
     # ../spec/mnemo_0_spec.c:165 L=165 I=32
  13) mne_tos() cows are flying typed equals fails 'zd' 
     expected -1
        to == 0
     >        expect(-1 zd== 0);<
     # ../spec/mnemo_0_spec.c:169 L=169 I=33
  14) mne_tos() birds are flying is OK with "double quotes" and 	abs 
     >      ensure(1 == 2);<
     # ../spec/mnemo_1_spec.c:15 L=194 I=40
  15) mne_tos() birds are flying does not care about 
 
     >      expect(1 == 2);<
     # ../spec/mnemo_1_spec.c:19 L=198 I=41

33 examples, 34 tests seen, 15 failures

Failed examples:

make spec L=37 # mne_tos() cows are flying turns longs to mnemonic (hopefully) strings 
make spec L=57 # mne_tos() cows are flying string equals compares strings 2 
make spec L=71 # mne_tos() cows are flying string equals expects strings to differ 2 
make spec L=79 # mne_tos() cows are flying string equals doesn't crash when strings are NULL 
make spec L=83 # mne_tos() cows are flying string equals compares to NULL 
make spec L=106 # mne_tos() cows are flying string equals matches strings 2 (fail) 
make spec L=119 # mne_tos() cows are flying string equals starts with (failure) 
make spec L=123 # mne_tos() cows are flying string equals starts and ends quickly if the result is NULL 
make spec L=136 # mne_tos() cows are flying string equals ends with (failure) 
make spec L=140 # mne_tos() cows are flying string equals ends quickly if the result is NULL 
make spec L=161 # mne_tos() cows are flying typed equals fails 
make spec L=165 # mne_tos() cows are flying typed equals fails 'f' 
make spec L=169 # mne_tos() cows are flying typed equals fails 'zd' 
make spec L=194 # mne_tos() birds are flying is OK with "double quotes" and 	abs 
make spec L=198 # mne_tos() birds are flying does not care about 
 

