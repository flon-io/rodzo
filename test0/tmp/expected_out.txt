
mne_tos() L=21 I=2
  cows are flying L=23 I=3
    used to crash when the 1st it had no ensure L=25 I=4
    turns longs to mnemonic (hopefully) strings (FAILED) L=37 I=5
    flips "burgers" L=46 I=6
    === L=49 I=7
      compares strings 1 L=53 I=8
      compares strings 2 (FAILED) L=57 I=9
      compares strings 2 L=63 I=10
      expects strings to differ 1 L=67 I=11
      expects strings to differ 2 (FAILED) L=71 I=12
      frees strings 1 L=75 I=13
      doesn't crash when strings are NULL (FAILED) L=79 I=14
      compares to NULL (FAILED) L=83 I=15
      compares empty strings L=88 I=16
    ~== L=101 I=17
      matches strings 1 L=105 I=18
      matches strings 2 (failure) (FAILED) L=109 I=19
      matches strings (insensitive) L=113 I=20
      understands !~== (hit) L=117 I=21
      understands !~== (miss) (FAILED) L=121 I=22
      doesn't mind NULL values (miss) (FAILED) L=126 I=23
    ^== L=130 I=24
      starts with (success) L=134 I=25
      starts with (failure) (FAILED) L=138 I=26
      starts and ends quickly if the result is NULL (FAILED) L=142 I=27
      starts with (insensitive) L=146 I=28
      understands !^== (hit) L=150 I=29
      understands !^== (miss) (FAILED) L=154 I=30
      doesn't mind NULL values (miss) (FAILED) L=159 I=31
    $== L=163 I=32
      ends with (success) L=167 I=33
      ends with (failure) (FAILED) L=171 I=34
      ends quickly if the result is NULL (FAILED) L=175 I=35
      ends with (insensitive) L=179 I=36
      understands !$== (hit) L=183 I=37
      understands !$== (failure) (FAILED) L=187 I=38
      doesn't mind NULL values (miss) (FAILED) L=192 I=39
    >== L=196 I=40
      accepts >== for 'contains' (hit) L=200 I=41
      accepts >== for 'contains' (miss) (FAILED) L=204 I=42
      accepts >==i for 'contains, whatever the case' L=208 I=43
      accepts !>== for 'does not contain' (hit) L=212 I=44
      accepts !>== for 'does not contain' (miss) (FAILED) L=216 I=45
      accepts !>==i for 'does not contain, whatever the case' L=220 I=46
      doesn't mind NULL values (miss) (FAILED) L=225 I=47
    ===i L=229 I=48
      accepts ===i for case insensitive comparison L=233 I=49
      accepts !==i for case insensitive comparison L=237 I=50
    typed equals L=241 I=51
      succeeds L=245 I=52
      fails (FAILED) L=249 I=53
      fails 'f' (FAILED) L=253 I=54
      fails 'zd' (FAILED) L=257 I=55
    accepts empty specs L=261 I=56
mne_tos() L=273 I=59
  birds are flying L=274 I=60
    finds the コンビニ convenient L=278 I=61
    is OK with "double quotes" and 	abs (FAILED) L=282 I=62
    does not care about 
 (FAILED) L=286 I=63
mne_toi() L=296 I=65
  flips burgers L=300 I=66

Failures:

  1) mne_tos() cows are flying turns longs to mnemonic (hopefully) strings 
     >      ensure(strcmp(mne_tos(7), "FAIL") == 0);<
     # ../spec/mnemo_0_spec.c:37 L=37 I=5
  2) mne_tos() cows are flying === compares strings 2 
     expected "ku"
     to equal "FAIL"
     >        ensure(mne_tos(7) === "FAIL");<
     # ../spec/mnemo_0_spec.c:57 L=57 I=9
  3) mne_tos() cows are flying === expects strings to differ 2 
     didn't expect "ia"
     >        ensure(mne_tos(47) !== "ia");<
     # ../spec/mnemo_0_spec.c:71 L=71 I=12
  4) mne_tos() cows are flying === doesn't crash when strings are NULL 
     result is NULL
     >        ensure(NULL === "ia");<
     # ../spec/mnemo_0_spec.c:79 L=79 I=14
  5) mne_tos() cows are flying === compares to NULL 
     expected "ia"
        to be NULL
     >        ensure("ia" === NULL);<
     # ../spec/mnemo_0_spec.c:83 L=83 I=15
  6) mne_tos() cows are flying ~== matches strings 2 (failure) 
     expected "ia"
     to match "[xy]a"
     >        ensure(mne_tos(47) ~== "[xy]a");<
     # ../spec/mnemo_0_spec.c:109 L=109 I=19
  7) mne_tos() cows are flying ~== understands !~== (miss) 
         expected "blah"
     not to match "bl[aeu]h"
     >        ensure("blah" !~== "bl[aeu]h");<
     # ../spec/mnemo_0_spec.c:121 L=121 I=22
  8) mne_tos() cows are flying ~== doesn't mind NULL values (miss) 
     result is NULL
     >        ensure(v ~== "bl[aeu]h");<
     # ../spec/mnemo_0_spec.c:126 L=126 I=23
  9) mne_tos() cows are flying ^== starts with (failure) 
          expected "this is true"
     to start with "that "
     >        ensure("this is true" ^== "that ");<
     # ../spec/mnemo_0_spec.c:138 L=138 I=26
  10) mne_tos() cows are flying ^== starts and ends quickly if the result is NULL 
          expected (null)
     to start with "that "
     >        ensure(NULL ^== "that ");<
     # ../spec/mnemo_0_spec.c:142 L=142 I=27
  11) mne_tos() cows are flying ^== understands !^== (miss) 
              expected "this is true"
     not to start with "this "
     >        ensure("this is true" !^== "this ");<
     # ../spec/mnemo_0_spec.c:154 L=154 I=30
  12) mne_tos() cows are flying ^== doesn't mind NULL values (miss) 
          expected (null)
     to start with "blah"
     >        ensure(v ^== "blah");<
     # ../spec/mnemo_0_spec.c:159 L=159 I=31
  13) mne_tos() cows are flying $== ends with (failure) 
        expected "this is true"
     to end with " false"
     >        ensure("this is true" $== " false");<
     # ../spec/mnemo_0_spec.c:171 L=171 I=34
  14) mne_tos() cows are flying $== ends quickly if the result is NULL 
        expected (null)
     to end with " false"
     >        ensure(NULL $== " false");<
     # ../spec/mnemo_0_spec.c:175 L=175 I=35
  15) mne_tos() cows are flying $== understands !$== (failure) 
            expected "this is true"
     not to end with " true"
     >        ensure("this is true" !$== " true");<
     # ../spec/mnemo_0_spec.c:187 L=187 I=38
  16) mne_tos() cows are flying $== doesn't mind NULL values (miss) 
        expected (null)
     to end with "blah"
     >        ensure(v $== "blah");<
     # ../spec/mnemo_0_spec.c:192 L=192 I=39
  17) mne_tos() cows are flying >== accepts >== for 'contains' (miss) 
       expected "this is True"
     to contain "is Fal"
     >        expect("this is True" >== "is Fal");<
     # ../spec/mnemo_0_spec.c:204 L=204 I=42
  18) mne_tos() cows are flying >== accepts !>== for 'does not contain' (miss) 
           expected "this is True"
     not to contain "is is"
     >        expect("this is True" !>== "is is");<
     # ../spec/mnemo_0_spec.c:216 L=216 I=45
  19) mne_tos() cows are flying >== doesn't mind NULL values (miss) 
       expected (null)
     to contain "blah"
     >        ensure(v >== "blah");<
     # ../spec/mnemo_0_spec.c:225 L=225 I=47
  20) mne_tos() cows are flying typed equals fails 
     expected 1
        to == 2
     >        expect(1 i== 2);<
     # ../spec/mnemo_0_spec.c:249 L=249 I=53
  21) mne_tos() cows are flying typed equals fails 'f' 
     expected 1.000000
        to == 2.000000
     >        expect(1.0 f== 2.0);<
     # ../spec/mnemo_0_spec.c:253 L=253 I=54
  22) mne_tos() cows are flying typed equals fails 'zd' 
     expected -1
        to == 0
     >        expect(-1 zd== 0);<
     # ../spec/mnemo_0_spec.c:257 L=257 I=55
  23) mne_tos() birds are flying is OK with "double quotes" and 	abs 
     >      ensure(1 == 2);<
     # ../spec/mnemo_1_spec.c:15 L=282 I=62
  24) mne_tos() birds are flying does not care about 
 
     >      expect(1 == 2);<
     # ../spec/mnemo_1_spec.c:19 L=286 I=63

50 examples, 51 tests seen, 24 failures

Failed examples:

make spec L=37 # mne_tos() cows are flying turns longs to mnemonic (hopefully) strings 
make spec L=57 # mne_tos() cows are flying === compares strings 2 
make spec L=71 # mne_tos() cows are flying === expects strings to differ 2 
make spec L=79 # mne_tos() cows are flying === doesn't crash when strings are NULL 
make spec L=83 # mne_tos() cows are flying === compares to NULL 
make spec L=109 # mne_tos() cows are flying ~== matches strings 2 (failure) 
make spec L=121 # mne_tos() cows are flying ~== understands !~== (miss) 
make spec L=126 # mne_tos() cows are flying ~== doesn't mind NULL values (miss) 
make spec L=138 # mne_tos() cows are flying ^== starts with (failure) 
make spec L=142 # mne_tos() cows are flying ^== starts and ends quickly if the result is NULL 
make spec L=154 # mne_tos() cows are flying ^== understands !^== (miss) 
make spec L=159 # mne_tos() cows are flying ^== doesn't mind NULL values (miss) 
make spec L=171 # mne_tos() cows are flying $== ends with (failure) 
make spec L=175 # mne_tos() cows are flying $== ends quickly if the result is NULL 
make spec L=187 # mne_tos() cows are flying $== understands !$== (failure) 
make spec L=192 # mne_tos() cows are flying $== doesn't mind NULL values (miss) 
make spec L=204 # mne_tos() cows are flying >== accepts >== for 'contains' (miss) 
make spec L=216 # mne_tos() cows are flying >== accepts !>== for 'does not contain' (miss) 
make spec L=225 # mne_tos() cows are flying >== doesn't mind NULL values (miss) 
make spec L=249 # mne_tos() cows are flying typed equals fails 
make spec L=253 # mne_tos() cows are flying typed equals fails 'f' 
make spec L=257 # mne_tos() cows are flying typed equals fails 'zd' 
make spec L=282 # mne_tos() birds are flying is OK with "double quotes" and 	abs 
make spec L=286 # mne_tos() birds are flying does not care about 
 

